{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","undefined","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","to","id","width","Menu","state","selectedDish","this","setState","dishes","menu","map","key","active","Component","required","val","length","maxLength","len","CommentForm","isModalOpen","toggleModal","bind","handleSubmit","values","postComment","dishId","rating","yourname","comment","Fragment","onClick","isOpen","toggle","handleToggle","onSubmit","htmlFor","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","size","offset","type","color","DishDetail","comments","comm","author","Intl","DateTimeFormat","year","month","day","format","Date","date","top","dishDetails","renderDish","commentInfo","renderComments","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","outline","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","console","log","resetFeedbackForm","checkbox","role","RenderLeader","leaders","allLeaders","tag","left","middle","object","body","heading","About","title","list","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","payload","addComment","catch","message","dishesLoading","dishesFailed","errmess","addDishes","commentsFailed","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","actions","reset","addComments","feeedback","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a902c07.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n\n    if (isLoading) {\n        return (\n            < Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else if (item === undefined)\n    return (\n        <div></div>\n    ) \n    else\n    return (\n\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                \n            <Card>\n            <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                                isLoading={props.dishLoading}\n                                errMess={props.dishErrMess} \n                                />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                                isLoading={props.promoLoading}\n                                errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                                isLoading={props.leaderLoading}\n                                errMess={props.leaderErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Card, CardImg, CardTitle, Breadcrumb, BreadcrumbItem, CardImgOverlay } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderMenuItem({ dish}) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\nclass Menu extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedDish: null\n        }\n    }\n\n    onSelectedDish(dish) {\n        this.setState({\n            selectedDish: dish\n        })\n    }\n\n    render() {\n        if (this.props.dishes.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (this.props.dishes.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{this.props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        const menu = this.props.dishes.dishes.map((dish) =>  {\n            return (\n                <div key={dish.id} className='col-12 col-md-5 m-1'>\n                    <Card >\n                        <RenderMenuItem dish={dish}/>\n                    </Card>\n                </div>\n            );\n        });\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu; ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, \n    Breadcrumb, BreadcrumbItem, Modal, Label, Row, Col, \n    Button, ModalHeader, ModalBody} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit= this.handleSubmit.bind(this);\n    }\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\n    }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Button className=\"bg-white text-dark\" onClick={this.toggleModal}>\n                  <p className=\"fa fa-pencil fa-lg\"></p> Submit Comment </Button>\n            <Modal className =\"container\" isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.handleToggle}> Submit Comment </ModalHeader>\n                <ModalBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"rating\" md={4}>Rating</Label>\n                        <Col md={12}>\n                            <Control.select model=\".rating\" name=\"rating\"\n                                className=\"form-control\">\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Control.select>\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"yourname\" md={4}>Your Name</Label>\n                        <Col md={12}>\n                            <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\n                                placeholder=\"Your Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".yourname\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"comment\" md={4}>Comment</Label>\n                        <Col md={12}>\n                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                rows=\"6\"\n                                className=\"form-control\" />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col md={{ size: 10, offset: 2 }}>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </Row>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </React.Fragment>\n    );\n};\n}\n\nclass DishDetail extends Component {\n        renderComments(comments) {\n        const comm = comments.map(comment => {\n            return (\n                <Fade >\n                <li key={comment.id}>\n                    <p>{comment.comment}</p>\n                    <p>--{comment.author},\n                    {\"  \"}\n                    {new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'long',\n                        day: '2-digit'\n                    }).format(new Date(comment.date))}\n                    </p>\n                </li>\n                </Fade>\n            )\n        })\n        return (\n            <div className='col-12 col-md-5 m-1'>\n                <h4> Comments </h4>\n                <ul className='list-unstyled'>\n                    <Stagger in>\n                    {comm}    \n                    </Stagger>\n                </ul>\n                <CommentForm dishId={this.props.dish.id} postComment={this.props.postComment} />\n            </div>\n        )\n    }\n\n    renderDish(dish) {\n            return (\n          <div className='col-12 col-md-5 m-1'>\n                    <FadeTransform\n                        in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}>\n                    <Card>\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                    </FadeTransform>\n                </div>\n            )\n        }\n    render() {\n        const dish = this.props.dish\n        const comments=this.props.comments   \n        if (this.props.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (this.props.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{this.props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n                    \n       else if (dish == null || comments == null) {\n            return (<div></div>)\n        }\n        const dishDetails = this.renderDish(dish)\n        const commentInfo = this.renderComments(comments)\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{this.props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                     {dishDetails}\n                     &ensp;\n                    {commentInfo}                   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DishDetail","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n         Button, Modal, ModalHeader, ModalBody,Form, FormGroup, Input, Label} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Row, Col, Label} from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component{\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values)\n        console.log(\"Successfully submitted\");\n        this.props.resetFeedbackForm();\n    }\n\n    \n    render(){\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Send us your Feedback</h3>\n                </div>\n                <div className=\"col-12 col-md-9\">\n                    <Form model=\"feedback\"  onSubmit={(values) => this.handleSubmit(values)}>\n                        \n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                            <Col md={10}>\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less',\n                                        isNumber: 'Must be a number'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                            <Col md={10}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        validEmail: 'Invalid Email Address'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                    <h5>Our Address</h5>\n                    <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n}\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({ leaders, leaderLoading, leaderErrMess}) {\n    if (leaderLoading) {\n        return (\n            < Loading />\n        );\n    }\n    else if (leaderErrMess) {\n        return (\n            <h4>{leaderErrMess}</h4>\n        );\n    }\n    else if (leaders.length === 0) \n        return (\n            <div></div>\n        ) \n    \n    const allLeaders = leaders.map(leader => {\n        return (\n            <Fade in>\n            <div key={leader.id} className=\"col-12 mt-5\">\n                \n                <Media tag=\"li\">\n                    <Media left middle>\n                        <Media object src={leader.image} alt={leader.name} /></Media>\n                    <Media body className=\"ml-5\">\n                      <Media heading>{leader.name}</Media> \n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </div>\n            </Fade>\n        );\n\n    });\n\n    return (\n        <div className=\"row\">\n            <Stagger in >\n            {allLeaders}\n            </Stagger>\n        </div>\n\n\n    );\n}\n\nfunction About(props) {\n    \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                    <RenderLeader leaders={props.leaders}\n                                  leaderLoading={props.leaderLoading}\n                                  leaderErrMess={props.leaderErrMess} />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n        \n};\n\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n//==============\n//Assignment4\nexport const postFeedback = (feeedback) => {\n    const newFeedback={...feeedback}\n        newFeedback.date=new Date().toISOString();\nreturn fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => alert(JSON.stringify(response)))\n        .catch(error => { \n             alert('Your comment could not be posted\\nError: ' + error.message);\n     });\n};","export const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\nimport { Navbar } from 'reactstrap';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent'\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport { actions } from 'react-redux-form';\nimport { fetchDishes, fetchComments, fetchPromos, postComment, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { connect } from 'react-redux'\n\nconst mapDispatchToProps = dispatch => ({\n    addComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (values) => postFeedback(values),\n});\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders,\n        addComment: state.addComment\n    }\n}\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n\n\n        return (\n            <div>\n                <Navbar dark >\n                </Navbar>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route path='/aboutus' component={() => < About leaders={this.props.leaders.leaders}\n                                                                            leaderLoading={this.props.leaders.isLoading}\n                                                                            leaderErrMess={this.props.leaders.errMess} />} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\n\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload };\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\n\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n                        isLoading: true,\n                        errMess: null,\n                        leaders: []\n                     }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n   render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}